Traceback (most recent call last):
  File "/home/natalie/.local/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/natalie/.local/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/natalie/.local/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/natalie/.local/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/natalie/.local/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/natalie/.local/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/natalie/.local/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Dein Code
"""
Eine Response die HTML beinhaltet, kann logischerweise nicht als JSON dargestellt werden.
"""
response.json()

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mJSONDecodeError[0m                           Traceback (most recent call last)
File [0;32m~/.local/lib/python3.9/site-packages/requests/models.py:971[0m, in [0;36mResponse.json[0;34m(self, **kwargs)[0m
[1;32m    970[0m [38;5;28;01mtry[39;00m:
[0;32m--> 971[0m     [38;5;28;01mreturn[39;00m [43mcomplexjson[49m[38;5;241;43m.[39;49m[43mloads[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtext[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    972[0m [38;5;28;01mexcept[39;00m JSONDecodeError [38;5;28;01mas[39;00m e:
[1;32m    973[0m     [38;5;66;03m# Catch JSON-related errors and raise as requests.JSONDecodeError[39;00m
[1;32m    974[0m     [38;5;66;03m# This aliases json.JSONDecodeError and simplejson.JSONDecodeError[39;00m

File [0;32m/usr/lib/python3/dist-packages/simplejson/__init__.py:518[0m, in [0;36mloads[0;34m(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, use_decimal, **kw)[0m
[1;32m    514[0m [38;5;28;01mif[39;00m ([38;5;28mcls[39m [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m encoding [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m object_hook [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m
[1;32m    515[0m         parse_int [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m parse_float [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m
[1;32m    516[0m         parse_constant [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m object_pairs_hook [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m
[1;32m    517[0m         [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m use_decimal [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m kw):
[0;32m--> 518[0m     [38;5;28;01mreturn[39;00m [43m_default_decoder[49m[38;5;241;43m.[39;49m[43mdecode[49m[43m([49m[43ms[49m[43m)[49m
[1;32m    519[0m [38;5;28;01mif[39;00m [38;5;28mcls[39m [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/usr/lib/python3/dist-packages/simplejson/decoder.py:370[0m, in [0;36mJSONDecoder.decode[0;34m(self, s, _w, _PY3)[0m
[1;32m    369[0m     s [38;5;241m=[39m [38;5;28mstr[39m(s, [38;5;28mself[39m[38;5;241m.[39mencoding)
[0;32m--> 370[0m obj, end [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mraw_decode[49m[43m([49m[43ms[49m[43m)[49m
[1;32m    371[0m end [38;5;241m=[39m _w(s, end)[38;5;241m.[39mend()

File [0;32m/usr/lib/python3/dist-packages/simplejson/decoder.py:400[0m, in [0;36mJSONDecoder.raw_decode[0;34m(self, s, idx, _w, _PY3)[0m
[1;32m    399[0m         idx [38;5;241m+[39m[38;5;241m=[39m [38;5;241m3[39m
[0;32m--> 400[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mscan_once[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[43midx[49m[38;5;241;43m=[39;49m[43m_w[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[43midx[49m[43m)[49m[38;5;241;43m.[39;49m[43mend[49m[43m([49m[43m)[49m[43m)[49m

File [0;32m/usr/lib/python3/dist-packages/simplejson/scanner.py:79[0m, in [0;36mpy_make_scanner.<locals>.scan_once[0;34m(string, idx)[0m
[1;32m     78[0m [38;5;28;01mtry[39;00m:
[0;32m---> 79[0m     [38;5;28;01mreturn[39;00m [43m_scan_once[49m[43m([49m[43mstring[49m[43m,[49m[43m [49m[43midx[49m[43m)[49m
[1;32m     80[0m [38;5;28;01mfinally[39;00m:

File [0;32m/usr/lib/python3/dist-packages/simplejson/scanner.py:70[0m, in [0;36mpy_make_scanner.<locals>._scan_once[0;34m(string, idx)[0m
[1;32m     69[0m [38;5;28;01melse[39;00m:
[0;32m---> 70[0m     [38;5;28;01mraise[39;00m JSONDecodeError(errmsg, string, idx)

[0;31mJSONDecodeError[0m: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

[0;31mJSONDecodeError[0m                           Traceback (most recent call last)
Cell [0;32mIn [6], line 5[0m
[1;32m      1[0m [38;5;66;03m# Dein Code[39;00m
[1;32m      2[0m [38;5;124;03m"""[39;00m
[1;32m      3[0m [38;5;124;03mEine Response die HTML beinhaltet, kann logischerweise nicht als JSON dargestellt werden.[39;00m
[1;32m      4[0m [38;5;124;03m"""[39;00m
[0;32m----> 5[0m response[38;5;241m.[39mjson()

File [0;32m~/.local/lib/python3.9/site-packages/requests/models.py:975[0m, in [0;36mResponse.json[0;34m(self, **kwargs)[0m
[1;32m    971[0m     [38;5;28;01mreturn[39;00m complexjson[38;5;241m.[39mloads([38;5;28mself[39m[38;5;241m.[39mtext, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m    972[0m [38;5;28;01mexcept[39;00m JSONDecodeError [38;5;28;01mas[39;00m e:
[1;32m    973[0m     [38;5;66;03m# Catch JSON-related errors and raise as requests.JSONDecodeError[39;00m
[1;32m    974[0m     [38;5;66;03m# This aliases json.JSONDecodeError and simplejson.JSONDecodeError[39;00m
[0;32m--> 975[0m     [38;5;28;01mraise[39;00m RequestsJSONDecodeError(e[38;5;241m.[39mmsg, e[38;5;241m.[39mdoc, e[38;5;241m.[39mpos)

[0;31mJSONDecodeError[0m: Expecting value: line 1 column 1 (char 0)
JSONDecodeError: Expecting value: line 1 column 1 (char 0)

